// [PackageDev] target_format: plist, ext: tmLanguage
{
  "name": "One Command",
  "scopeName": "source.one_command",
  "fileTypes": ["1cc"],

  "patterns": [
    {
      "match": "^\\s*#.*$",
      "name": "comment.line.number-sign"
    },
    {
      "match": "\\\\\\s*$",
      "name": "comment.line"
    },
    {
      "match": "\\|\\\\n\\|",
      "name": "comment.line"
    },
    {
      "match": "\\$\\w+\\b|\\|\\$\\w+\\|",
      "name": "storage.type"
    },
    {
      "match": "(?i)(?<=INIT:|COND:|REPEAT:)\\s*COND:",
      "name": "entity.name.tag"
    },
    {
      "match": "(?i)^\\s*COND:",
      "name": "entity.name.tag"
    },
    {
      "match": "(?i)(?<=INIT:|COND:|REPEAT:)\\s*INIT:",
      "name": "entity.name.function"
    },
    {
      "match": "(?i)^\\s*INIT:",
      "name": "entity.name.function"
    },
    {
      "match": "(?i)^\\s*DEFINE:\\s*\\w+\\b",
      "name": "storage.type"
    },
    {
      "match": "(?i)^\\s*(UNDEFINE:|IMPORT:)\\s*\\w+\\b",
      "name": "entity.name.tag"
    },
    {
      "match": "(?i)(?<=INIT:|COND:|REPEAT:)\\s*BLOCK:\\s*[\\w_:]+(:\\d{1,2})?",
      "name": "storage.type"
    },
    {
      "match": "(?i)^\\s*BLOCK:\\s*[\\w_:]+(:\\d{1,2})?",
      "name": "storage.type"
    },
    {
      "match": "(?i)(?<=INIT:|COND:|REPEAT:)\\s*REPEAT:",
      "name": "constant.language"
    },
    {
      "match": "(?i)^\\s*REPEAT:",
      "name": "constant.language"
    },
    {
      "match": "~",
      "name": "constant.numeric"
    },
    {
      "match": "-?(?<!\\.)[\\d][bsl]?(?!\\.)",
      "name": "constant.numeric"
    },
    {
      "match": "-?\\d*\\.\\d+f?",
      "name": "constant.numeric"
    },
    {
      "match": "!",
      "name": "entity.name.tag"
    },
    {
      "match": "@[prae]",
      "name": "storage.type"
    },
    {
      "match": "[\\w_]+(?==[!\\w_\\|\\$])",
      "name": "variable.parameter"
    },
    {
      "match": "(?<==|=!)[\\w_]+",
      "name": "storage.type"
    },
    {
      "match": "\"([^\"\\\\]*(\\\\.)*)*\"",
      "name": "string.quoted.double"
    },
    {
      "match": "ยง[\\da-fA-Fk-oK-OrR]?",
      "name": "invalid.illegal"
    },
    {
      "match": "false|true",
      "name": "constant.language"
    },
    {
      "match": "minecraft:",
      "name": "entity.name.tag"
    },
    {
      "match": "\\|[a-zA-Z0-9_]+\\|",
      "name": "variable.parameter"
    }
  ],
  "uuid": "cabd43d7-cf20-4530-8822-b50016a67fe8"
}